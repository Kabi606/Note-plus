{"ast":null,"code":"var _jsxFileName = \"/var/www/notepad/mynotes/src/pages/NotePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\n// import notes from '../assets/data.js'\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotePage = () => {\n  _s();\n  let {\n    id\n  } = useParams();\n  let navigate = useNavigate();\n  let [note, setNote] = useState({});\n  useEffect(() => {\n    let getNote = async () => {\n      if (id === 'new') return;\n      let response = await fetch(`/api/notes/${id}`);\n      let data = await response.json();\n      console.log(data);\n      setNote(data);\n    };\n    getNote();\n  }, [id]);\n  let createNote = async () => {\n    await fetch(`/api/notes/create/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ...note,\n        'updated': new Date()\n      })\n    });\n  };\n  let updateNote = async () => {\n    await fetch(`/api/notes/${id}/update/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ...note,\n        'updated': new Date()\n      })\n    });\n  };\n  let deleteNote = async () => {\n    await fetch(`/api/notes/${id}/delete/`, {\n      method: 'DELETE'\n    });\n    navigate('/');\n  };\n  let handleSubmit = () => {\n    if (id !== 'new' && !note.body) {\n      deleteNote();\n    } else if (id !== 'new') {\n      updateNote();\n    } else if (id === 'new' && note !== null) {\n      createNote();\n    }\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n            onClick: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), id !== 'new' ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteNote,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-body\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: e => {\n          setNote({\n            ...note,\n            'body': e.target.value\n          });\n        },\n        value: note.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(NotePage, \"wX5b2UOrVYpxH6m13Qu93oRSpIg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = NotePage;\nexport default NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","Link","ReactComponent","ArrowLeft","NotePage","id","navigate","note","setNote","getNote","response","fetch","data","json","console","log","createNote","method","headers","body","JSON","stringify","Date","updateNote","deleteNote","handleSubmit","e","target","value"],"sources":["/var/www/notepad/mynotes/src/pages/NotePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams,useNavigate,Link } from 'react-router-dom'\n// import notes from '../assets/data.js'\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\n\nconst NotePage = () => {\n  let { id }  = useParams();\n  let navigate = useNavigate()\n  let [note, setNote] = useState({})\n  useEffect(() => {\n    let getNote = async () => {\n      if (id === 'new') return\n      let response = await fetch(`/api/notes/${id}`)\n      let data = await response.json()\n      console.log(data)\n      setNote(data)\n    }\n    getNote()\n  }, [id])\n\n  let createNote = async () => {\n    await fetch(`/api/notes/create/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({...note, 'updated': new Date()})\n    })\n  }\n\n  let updateNote = async () => {\n    await fetch(`/api/notes/${id}/update/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({...note, 'updated': new Date()})\n    })\n  }\n\n  let deleteNote = async () => {\n    await fetch(`/api/notes/${id}/delete/`, {\n      method: 'DELETE'\n    })\n    navigate('/')\n  }\n\n  let handleSubmit = () => {\n    if (id !== 'new' && !note.body) {\n      deleteNote()\n    } else if (id !== 'new') {\n      updateNote()\n    } else if (id ==='new' && note !== null) {\n      createNote()\n    }\n    navigate('/')\n  }\n\n  return (\n    <div className='note'>\n      <div className=\"note-header\">\n        <h3>\n          <Link to='/'>\n            <ArrowLeft onClick={handleSubmit} />\n          </Link>\n        </h3>\n        {id !== 'new' ? (\n          <button onClick={deleteNote}>Delete</button>\n        ):(\n          <button onClick={handleSubmit}>Save</button>\n        )}\n      </div>\n      <div className=\"note-body\">\n        <textarea onChange={(e) => {setNote({...note, 'body':e.target.value})}} value={note.body}>  \n        </textarea>\n      </div>\n    </div>\n  )\n}\n\nexport default NotePage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}